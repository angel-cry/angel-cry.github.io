<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Charles]]></title>
    <url>%2FCharles.html</url>
    <content type="text"><![CDATA[最近玩了一下我要当皇上小游戏，用了一下Charles,刚好可以记录一下Charles. CharlesCharles是一款用于HTTP信息抓包工具，可以快速有效的获得HTTP信息，非常利于开发者的网页开发和调试修改等！Charles 有着可视化的操作界面，非常利用编辑者的使用和调试！ 安装家里有矿的朋友们直接买正版软件就好了。至于破解版，大家可以上网搜，很多的，这里就不放链接了，不然更新版本可能对应不上。 常见问题比如抓包https的没有问题，enable ssl的时候出现unknown消息，disable ssl的时候出现乱码。解决办法：在设置–&gt;通用–&gt;关于本机–&gt;证书信任设置把里面的那个Charles的证书设置为信任就可以了。 实战用例这里就以微信小游戏《我要当皇上》来演示，因为这个是没有加密的，容易点。先放一张刚开始的游戏界面：然后再来一张刷完后的好对比：怎么做到的呢，跟着下面的步骤一步一步来做。首先打开我们的主角Charles,分别点击图中红色框内的按钮，安装一下电脑和手机的证书。 在点击第二个框的时候，会弹出一个提示框，此时我们将手机连入到和电脑相同的WIFI中，并点开此WIFI的详情然后点开代理然后根据之前的弹框提示，设置服务器和端口然后用苹果手机自带的safari浏览器，打开chls.pro/ssl 这个地址，安装描述文件安装描述文件后，到通用-设备管理-找到刚刚安装的描述文件，并信任他。还有通用-》关于本机-》证书信任设置（必须勾选上） 如果您浏览器打不开，没有网，不要慌。你看看你电脑上是否出现过一次提示，让你选择Allow或Deny的，你选择Allow就可以正常连接了。如果一直没有，你可以忘记该网络，重新设置一遍。然后，为了更好的抓包，我们需要再设置一个地方,proxy setting 在打开小游戏前，我们先清空一下charles左侧乱七八糟的请求,然后我们会发现我们抓到的请求里面是unknown，识别不出来。怎么办呢，我们可以到SSL Proxying Settings中把这些请求域名添加上，端口是443。设置好后我们发现有数据了，而且还是明文的，开心吧。 现在我们离成功不远了，先来分析一下数据。12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970&#123; "saveTime": 1560190247689,//保存时间 "coin": "260604",//每秒多少金币 "diamon": 250,//砖石数目 "shopLevel": 2,//商店等级,可以改到37 "isNewPlayer": false,//是否为新玩家？ "speedup": 1,//加速等级 "upStartTime": 1560190246689,//更新时间 "loginDays": 1,//登录天数？ "loginRewardDays": 1,//奖励天数 "lastLoginTime": 1560183238103,//最后登录时间 "guideStep": 4,//向导步骤 "friendDraw": 0, "shareCoinNum": 0, "shareDiamonNum": 0, "luckyCount": 0, "luckyShareCount": 0, "luckyUpTime": 0, "dbVersion": 4706,//数据库版本，必改 "version": "1.4.0", //以下就是3*4的十二宫格内容了，从0开始到11，37为满级，pos代表角色位置 "slots": [&#123; "id": 1, "pos": 0 &#125;, &#123; "id": 2, "pos": 1 &#125;, &#123; "id": 1, "pos": 2 &#125;, &#123; "id": 1, "pos": 3 &#125;, &#123; "id": 1, "pos": 4 &#125;, &#123; "id": 1, "pos": 5 &#125;, &#123; "id": 1, "pos": 6 &#125;, &#123; "id": 1, "pos": 7 &#125;, &#123; "id": 1, "pos": 8 &#125;], //以下就是商店中可买的角色 "items": [&#123; "id": 1, "buyUnlock": 1,//为1时，可买 "diamonUnlock": 0,//为1时，可钻石买 "coinUnlock": 1,// 为1时，可金币购买 "coinCount": 10,// 使用金币购买累计次数 "diamonCount": 0// 使用钻石购买累计次数 &#125;, &#123; "id": 2, "buyUnlock": 1, "diamonUnlock": 0, "coinUnlock": 0, "coinCount": 0, "diamonCount": 0 &#125;], "shareGrop": null, "isFly": 0,// 是否飞升 "userid": "10ae2ff379-1911-47c9-8334-0dbff4dc4ec7", "openId": "ovKTi5FQEmxcYXrzMeJFnrKBIunQ"&#125; OK,多点几次后，我们会发现每次关闭小游戏的时候，他会调用saveUserData这个请求。那么我们就对这个请求进行操作。右键compose,或者点击上放到按钮都行，接着修改我们想要修改的数据，并发送。 好了，已经改完了，膨胀起来。反正都是明文的，我们随心所欲的改就好了，唯一注意点就是最好是关闭游戏后再发送数据。最后来两张最终图。]]></content>
      <categories>
        <category>抓包</category>
      </categories>
      <tags>
        <tag>抓包</tag>
        <tag>破解</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo]]></title>
    <url>%2FHexo.html</url>
    <content type="text"><![CDATA[这个博客是用hexo搭建的，相比于用WordPress之类的，不用申请空间，不用弄数据库，更适合自己使用。前段时间域名失效了，重新买了个域名，借此机会整理一下关于hexo。 HEXOHexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 安装安装的话还是挺方便的，配置一下环境，按照官网步骤一步一步来，以为更新后命令语句也更新了，现在是1$ npm install -g hexo-cli 部分安装失败解决办法最常见的是权限问题，你可以在命令行前加上sudo。网上常见的有一下几种方法:第一种：修改权限，chmod 777 /var/root 修改权限第二种：sudo npm install -g -unsafe-perm hexo第三种：使用淘宝镜像，sudo npm install -g hexo --registry=https://registry.npm.taobao.org第四种：1234sudo npm cache clean -f sudo npm install -g n sudo n stable sudo npm -g install hexo-cli 还有一种：http://stackoverflow.com/questions/15633029/npm-no-longer-working 初始化Hexo123mkdir blogcd bloghexo init 建立了一个名为blog的文件，并初始化hexo。当然你也可以，在’‘blog’后面加上指定路径注：初始化后，终端会有提示，根据提示操作。如下： 12345$ mkdir blog$ cd blog$ hexo initINFO Copying data to ~/blog INFO You are almost done! Don't forget to run 'npm install' before you start blogging with Hexo! 此时我们就要输入：1$ npm install 生成和预览12hexo generatehexo server 或者简称12hexo g hexo s 用浏览器打开http://localhost:4000 预览博客 部署Hexo 提供了快速方便的一键部署功能，让您只需一条命令就能将网站部署到服务器上。1$ hexo deploy Hexo 生成的所有文件都放在 public 文件夹中，您可以将它们复制到您喜欢的地方，无论是第三方托管还是自己搭建的服务器，只要是有pages服务的，都可以用。常见的github, oschina, coding(前生gitcafe)的部署都是大同小异的，本着节约是美德的目标，我简单讲一下这三者的区别: github: 免费账户只能创建公共库，所以你的配置文件都会本看到。 oschina: 免费账户可以创建1000免费私有库，但是不支持域名解析，只能用它提供的二级域名。 coding: 免费账户可以创建不多的私有库，支持域名，但是会有一个他们自己的跳转页面，才会跳到你的主页。 这里我介绍一下github的部署: 配置SSH用git上传代码，肯定需要绑定SSH keys的，这点我就不多说了。继续， 创建并检查SSH：先去github创建一个帐号，new repository 一个，命名为 **.github.io(这里有一点我说明一下,如果你随意创建了一个仓库名，那么得到的域名会是” [仓库名].[账户名].github.io“，所以你想用短一点的域名，就用自己的账户名来创建仓库，得到的就会是” [账户名].github.io**”)然后检查SSH keys的设置,首先我们需要检查你电脑上现有的ssh key：$ cd ~/.ssh如果显示“No such file or directory”，跳到第三步，否则继续。 备份和移除原来的ssh key设置：因为已经存在key文件，所以需要备份旧的数据并删除： 12345$ lsconfig id_rsa id_rsa.pub known_hosts$ mkdir key_backup$ cp id_rsa* key_backup$ rm id_rsa* 生成新的SSH Key：输入下面的代码，就可以生成新的key文件，我们只需要默认设置就好，所以当需要输入文件名的时候，回车就好。 123$ ssh-keygen -t rsa -C "邮件地址@youremail.com"Generating public/private rsa key pair.Enter file in which to save the key (/Users/your_user_directory/.ssh/id_rsa):&lt;回车就好&gt; 然后系统会要你输入加密串（Passphrase）： 12Enter passphrase (empty for no passphrase):&lt;输入加密串&gt;Enter same passphrase again:&lt;再次输入加密串&gt; 最后看到这样的界面，就成功设置ssh key了： 添加SSH Key到GitHub：在本机设置SSH Key之后，需要添加到GitHub上，以完成SSH链接的设置。用文本编辑工具打开id_rsa.pub文件，如果看不到这个文件，你需要设置显示隐藏文件。准确的复制这个文件的内容，才能保证设置的成功。在github上点击settings按钮选择SSH Keys项，把复制的内容粘贴进去，然后点击Add Key按钮即可： 测试一下:可以输入下面的命令，看看设置是否成功，git@github.com的部分不要修改：$ ssh -T git@github.com如果是下面的反应：123The authenticity of host 'github.com (207.97.227.239)' can't be established.RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.Are you sure you want to continue connecting (yes/no)? 不要紧张，输入yes就好，然后会看到：1Hi angel-cry! You've successfully authenticated, but GitHub does not provide shell access. 发布配置完就是发布了，hexo的发布非常方便！首先在根目录新建一个 CNAME 文件，内容为www.*****.com修改_config.yml：123deploy: type: github repository: https://github.com/angel-cry/angelcry.github.io.git 发布1hexo deploy 简称1hexo d 主题这里我使用的是next主题,因为比较简洁。官方文档: http://theme-next.iissnan.com/getting-started.html因为主题这块大家喜好都不一样，我就不做过多描述了。 后话 既然是一个网站，肯定少不了seo, 所以大家最好让各大引擎网站收录你的网站。好了，hexo是一个开源的博客框架，网上有非常多的文章，聪明的你肯定有办法打造一个适合自己的博客，祝大家使用愉快！]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>blog</tag>
      </tags>
  </entry>
</search>